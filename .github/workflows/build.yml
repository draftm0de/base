name: BaseImage Builder

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'Choose BaseImage to be created'
        required: true
        type: choice
        options:
          - '---choose---'
          - 'CADDY'
          - 'MARIADB'
          - 'NGINX'
          - 'PHP-FPM'

jobs:
  check-files:
    name: Check Required Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check for .env and docker-compose.yml
        id: check_files
        run: |
          files=(.env docker-compose.yml)
          
          for file in "${files[@]}"; do
            if [ -f "$file" ]; then
              echo "[I] required file <$file> exist"
            else
              echo "[E] required file <$file> does not exist"
              exit 1
            fi
          done        

  check-tag:
    name: Verify Image Tag
    runs-on: ubuntu-latest
    needs: check-files
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Verify Tag Existence
        id: check-tag
        run: |
          set -o allexport
          source .env
          set +o allexport
          
          STAGE="${{ github.event.inputs.stage }}"
          IMAGE_NAME_VAR="${STAGE}_IMAGE_NAME"
          IMAGE_TAG_VAR="${STAGE}_IMAGE_TAG"
          
          IMAGE_NAME="${!IMAGE_NAME_VAR}"
          IMAGE_TAG="${!IMAGE_TAG_VAR}"
          
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          
          if docker manifest inspect ${DOCKER_NAMESPACE}/${IMAGE_NAME_LOWER}:${IMAGE_TAG} > /dev/null 2>&1; then
            echo "[E] TAG ${IMAGE_TAG} for IMAGE ${DOCKER_NAMESPACE}/${IMAGE_NAME_LOWER} already exists"
            exit 1
          else            
            echo "[I] TAG ${IMAGE_TAG} for IMAGE ${DOCKER_NAMESPACE}/${IMAGE_NAME_LOWER} does not exist"
          fi

  build_and_push:
    name: Build and Push to Registry
    runs-on: ubuntu-latest
    needs: check-tag
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          set -o allexport
          source .env
          set +o allexport
          
          STAGE="${{ github.event.inputs.stage }}"
          STAGE_LOWER=$(echo "$STAGE" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME_VAR="${STAGE}_IMAGE_NAME"
          IMAGE_TAG_VAR="${STAGE}_IMAGE_TAG"
          
          IMAGE_NAME="${!IMAGE_NAME_VAR}"
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          
          IMAGE_TAG="${!IMAGE_TAG_VAR}"
          
          echo "Building Docker image..."
          docker compose -f docker-compose.yml build --no-cache --force-rm ${STAGE_LOWER}
          
          echo "Pushing Docker image to Docker Hub..."
          docker image push ${DOCKER_NAMESPACE}/${IMAGE_NAME_LOWER}:${IMAGE_TAG}
